tombo@AtomsOberflche:/mnt/c/Users/tombo/HTWG/AIN2/SysProg$ cd sypr-uebungen/aufgabe3
tombo@AtomsOberflche:/mnt/c/Users/tombo/HTWG/AIN2/SysProg/sypr-uebungen/aufgabe3$ javac Stringsort.java
tombo@AtomsOberflche:/mnt/c/Users/tombo/HTWG/AIN2/SysProg/sypr-uebungen/aufgabe3$ java Stringsort 200
Unsortiertes Array:
111 77 199 142 172 52 7 21 116 170 11 11 195 177 115 40 50 58 82 170 194 185 112 163 54 43 52 57 149 55 23 26 7 14 28 17 111 96 195 41 151 53 29 173 106 124 153 162 138 67 53 66 89 52 65 38 109 113 109 39 125 36 130 17 168 149 110 132 5 72 185 152 100 178 77 140 51 120 98 19 149 108 39 196 102 165 61 133 33 170 149 75 58 27 82 129 167 141 49 10 33 119 37 172 81 45 167 59 101 65 154 175 89 120 52 148 2 48 177 92 15 172 2 131 128 138 115 94 72 146 177 32 55 195 18 163 56 171 79 0 42 98 92 139 145 52 137 69 76 193 185 111 65 59 7 137 165 140 184 180 80 65 27 42 164 134 5 160 46 63 170 68 110 121 126 49 145 83 105 181 70 172 24 195 93 178 120 57 74 60 110 80 129 101 26 187 164 14 186 135
Sortiertes Array:
0 10 100 101* 102 105 106 108 109* 11* 110** 111** 112 113 115* 116 119 120** 121 124 125 126 128 129* 130 131 132 133 134 135 137* 138* 139 14* 140* 141 142 145* 146 148 149*** 15 151 152 153 154 160 162 163* 164* 165* 167* 168 17* 170*** 171 172*** 173 175 177** 178* 18 180 181 184 185** 186 187 19 193 194 195*** 196 199 2* 21 23 24 26* 27* 28 29 32 33* 36 37 38 39* 40 41 42* 43 45 46 48 49* 5* 50 51 52**** 53* 54 55* 56 57* 58* 59* 60 61 63 65*** 66 67 68 69 7** 70 72* 74 75 76 77* 79 80* 81 82* 83 89* 92* 93 94 96 98*
tombo@AtomsOberflche:/mnt/c/Users/tombo/HTWG/AIN2/SysProg/sypr-uebungen/aufgabe3$ make
gcc -g -Wall -Wextra -Werror -Wvla -std=c11 -pedantic    stringsort.c   -o stringsort
tombo@AtomsOberflche:/mnt/c/Users/tombo/HTWG/AIN2/SysProg/sypr-uebungen/aufgabe3$ ./stringsort 200
Unsortiertes Array:
75, 37, 55, 46, 111, 165, 50, 20, 138, 194, 157, 69, 174, 130, 153, 104, 93, 57, 179, 6, 104, 127, 166, 147, 60, 148, 117, 158, 44, 143, 110, 72, 181, 118, 118, 44, 35, 168, 65, 173, 114, 174, 194, 40, 56, 148, 144, 149, 5, 123, 156, 61, 2, 122, 8, 62, 22, 126, 173, 67, 69, 35, 91, 50, 153, 9, 95, 140, 129, 112, 65, 43, 86, 60, 83, 94, 8, 179, 43, 165, 54, 151, 26, 57, 73, 34, 71, 96, 160, 196, 115, 30, 32, 6, 32, 137, 167, 79, 78, 96, 191, 143, 91, 29, 3, 126, 123, 163, 105, 119, 128, 159, 70, 154, 168, 96, 141, 40, 192, 53, 36, 59, 83, 20, 65, 68, 110, 32, 147, 140, 80, 91, 35, 171, 72, 191, 97, 196, 154, 154, 67, 83, 65, 137, 189, 34, 33, 82, 26, 177, 136, 14, 188, 171, 187, 53, 39, 97, 37, 187, 37, 69, 30, 72, 192, 102, 63, 41, 98, 170, 195, 117, 5, 61, 55, 194, 47, 40, 29, 25, 170, 165, 39, 158, 136, 26, 164, 176, 123, 1, 115, 112, 23, 145, 137, 15, 47, 152, 57, 98,
Sortiertes Array:

, 1, 102, 104*, 105, 110*, 111, 112*, 114, 115*, 117*, 118*, 119, 122, 123**, 126*, 127, 128, 129, 130, 136*, 137**, 138, 14, 140*, 141, 143*, 144, 145, 147*, 148*, 149, 15, 151, 152, 153*, 154**, 156, 157, 158*, 159, 160, 163, 164, 165**, 166, 167, 168*, 170*, 171*, 173*, 174*, 176, 177, 179*, 181, 187*, 188, 189, 191*, 192*, 194**, 195, 196*, 2, 20*, 22, 23, 25, 26**, 29*, 3, 30*, 32**, 33, 34*, 35**, 36, 37**, 39*, 40**, 41, 43*, 44*, 46, 47*, 5*, 50*, 53*, 54, 55*, 56, 57**, 59, 6*, 60*, 61*, 62, 63, 65***, 67*, 68, 69**, 70, 71, 72**, 73, 75, 78, 79, 8*, 80, 82, 83**, 86, 9, 91**, 93, 94, 95, 96**, 97*, 98*
tombo@AtomsOberflche:/mnt/c/Users/tombo/HTWG/AIN2/SysProg/sypr-uebungen/aufgabe3$ valgrind ./stringsort 200
==2103== Memcheck, a memory error detector
==2103== Copyright (C) 2002-2022, and GNU GPL'd, by Julian Seward et al.
==2103== Using Valgrind-3.22.0 and LibVEX; rerun with -h for copyright info
==2103== Command: ./stringsort 200
==2103==
Unsortiertes Array:
41, 118, 85, 133, 4, 7, 19, 157, 166, 193, 67, 187, 51, 170, 105, 128, 168, 157, 120, 25, 172, 103, 77, 164, 143, 87, 144, 96, 143, 119, 3, 136, 37, 88, 69, 193, 95, 88, 102, 13, 81, 169, 1, 132, 92, 106, 12, 12, 15, 84, 37, 139, 187, 67, 55, 83, 154, 199, 179, 49, 70, 182, 185, 107, 22, 54, 52, 69, 142, 155, 82, 175, 76, 35, 59, 168, 141, 72, 180, 109, 108, 170, 48, 48, 37, 104, 131, 191, 55, 62, 41, 126, 196, 26, 185, 18, 33, 190, 39, 127, 97, 73, 103, 173, 109, 114, 94, 2, 186, 26, 111, 47, 196, 112, 95, 33, 168, 26, 177, 23, 40, 18, 101, 36, 196, 39, 54, 29, 29, 45, 157, 78, 118, 12, 51, 27, 126, 97, 30, 65, 124, 93, 112, 72, 5, 159, 106, 173, 137, 35, 149, 177, 53, 2, 13, 1, 41, 19, 183, 22, 64, 140, 100, 182, 104, 104, 162, 30, 1, 144, 47, 77, 37, 159, 150, 195, 70, 8, 120, 7, 43, 21, 136, 48, 24, 149, 1, 65, 168, 184, 40, 184, 124, 140, 119, 180, 196, 33, 11, 150,
Sortiertes Array:

, 1***, 100, 101, 102, 103*, 104**, 105, 106*, 107, 108, 109*, 11, 111, 112*, 114, 118*, 119*, 12**, 120*, 124*, 126*, 127, 128, 13*, 131, 132, 133, 136*, 137, 139, 140*, 141, 142, 143*, 144*, 149*, 15, 150*, 154, 155, 157**, 159*, 162, 164, 166, 168***, 169, 170*, 172, 173*, 175, 177*, 179, 18*, 180*, 182*, 183, 184*, 185*, 186, 187*, 19*, 190, 191, 193*, 195, 196***, 199, 2*, 21, 22*, 23, 24, 25, 26**, 27, 29*, 3, 30*, 33**, 35*, 36, 37***, 39*, 4, 40*, 41**, 43, 45, 47*, 48**, 49, 5, 51*, 52, 53, 54*, 55*, 59, 62, 64, 65*, 67*, 69*, 7*, 70*, 72*, 73, 76, 77*, 78, 8, 81, 82, 83, 84, 85, 87, 88*, 92, 93, 94, 95*, 96, 97*
==2103==
==2103== HEAP SUMMARY:
==2103==     in use at exit: 0 bytes in 0 blocks
==2103==   total heap usage: 203 allocs, 203 frees, 4,624 bytes allocated
==2103==
==2103== All heap blocks were freed -- no leaks are possible
==2103==
==2103== For lists of detected and suppressed errors, rerun with: -s
==2103== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
tombo@AtomsOberflche:/mnt/c/Users/tombo/HTWG/AIN2/SysProg/sypr-uebungen/aufgabe3$ make cppcheck
cppcheck --enable=warning,style --std=c11 stringsort.c
Checking stringsort.c ...
tombo@AtomsOberflche:/mnt/c/Users/tombo/HTWG/AIN2/SysProg/sypr-uebungen/aufgabe3$ make TARGET=stringsort-optimiert
make: Nothing to be done for 'all'.
tombo@AtomsOberflche:/mnt/c/Users/tombo/HTWG/AIN2/SysProg/sypr-uebungen/aufgabe3$ make TARGET=stringsort-optimiert cppcheck
cppcheck --enable=warning,style --std=c11 stringsort-optimiert.c
Checking stringsort-optimiert.c ...
tombo@AtomsOberflche:/mnt/c/Users/tombo/HTWG/AIN2/SysProg/sypr-uebungen/aufgabe3$ ./stringsort-optimiert 200
Unsortiertes Array:
99, 46, 54, 152, 44, 24, 168, 17, 189, 136, 20, 51, 158, 96, 127, 195, 109, 97, 186, 58, 165, 139, 128, 160, 160, 57, 66, 55, 196, 188, 170, 95, 34, 24, 199, 31, 48, 119, 48, 38, 55, 20, 41, 165, 116, 168, 161, 177, 17, 99, 35, 135, 38, 115, 95, 150, 172, 113, 5, 168, 101, 175, 15, 88, 151, 166, 71, 0, 86, 119, 190, 93, 91, 183, 59, 7, 103, 172, 136, 121, 23, 171, 8, 61, 86, 55, 163, 11, 168, 120, 179, 70, 47, 147, 110, 198, 113, 181, 150, 151, 52, 92, 45, 143, 75, 56, 102, 179, 180, 38, 52, 3, 161, 60, 16, 47, 115, 179, 10, 83, 51, 190, 105, 98, 89, 167, 96, 154, 148, 199, 106, 0, 91, 103, 143, 167, 111, 45, 98, 91, 35, 150, 46, 196, 10, 14, 44, 77, 193, 6, 112, 44, 196, 18, 94, 37, 137, 190, 192, 86, 141, 98, 38, 33, 153, 134, 0, 64, 131, 50, 107, 167, 0, 153, 163, 162, 119, 159, 191, 112, 166, 103, 108, 162, 73, 2, 152, 11, 144, 144, 97, 86, 194, 135, 71, 147, 21, 23, 11, 153,
Sortiertes Array:

, 0***, 10*, 101, 102, 103**, 105, 106, 107, 108, 109, 11**, 110, 111, 112*, 113*, 115*, 116, 119**, 120, 121, 127, 128, 131, 134, 135*, 136*, 137, 139, 14, 141, 143*, 144*, 147*, 148, 15, 150**, 151*, 152*, 153**, 154, 158, 159, 16, 160*, 161*, 162*, 163*, 165*, 166*, 167**, 168***, 17*, 170, 171, 172*, 175, 177, 179**, 18, 180, 181, 183, 186, 188, 189, 190**, 191, 192, 193, 194, 195, 196**, 198, 199*, 2, 20*, 21, 23*, 24*, 3, 31, 33, 34, 35*, 37, 38***, 41, 44**, 45*, 46*, 47*, 48*, 5, 50, 51*, 52*, 54, 55**, 56, 57, 58, 59, 6, 60, 61, 64, 66, 7, 70, 71*, 73, 75, 77, 8, 83, 86***, 88, 89, 91**, 92, 93, 94, 95*, 96*, 97*, 98**, 99*
tombo@AtomsOberflche:/mnt/c/Users/tombo/HTWG/AIN2/SysProg/sypr-uebungen/aufgabe3$ valgrind ./stringsort-optimiert 200
==2122== Memcheck, a memory error detector
==2122== Copyright (C) 2002-2022, and GNU GPL'd, by Julian Seward et al.
==2122== Using Valgrind-3.22.0 and LibVEX; rerun with -h for copyright info
==2122== Command: ./stringsort-optimiert 200
==2122==
Unsortiertes Array:
59, 137, 197, 49, 184, 114, 198, 12, 15, 47, 85, 6, 129, 87, 18, 104, 18, 132, 3, 82, 146, 193, 96, 80, 105, 130, 100, 39, 14, 169, 146, 25, 58, 95, 27, 43, 9, 25, 7, 25, 72, 44, 183, 153, 132, 154, 9, 102, 38, 12, 185, 184, 157, 81, 65, 14, 163, 165, 54, 130, 86, 152, 155, 145, 0, 182, 140, 9, 160, 147, 186, 184, 144, 122, 138, 28, 28, 147, 130, 66, 112, 115, 50, 69, 149, 67, 84, 112, 33, 90, 194, 71, 42, 102, 168, 194, 36, 108, 4, 196, 8, 142, 181, 152, 16, 71, 180, 44, 18, 62, 62, 130, 178, 113, 152, 79, 180, 36, 143, 165, 78, 138, 189, 72, 40, 157, 67, 76, 18, 23, 25, 178, 165, 158, 82, 134, 29, 62, 178, 199, 76, 41, 130, 54, 106, 34, 85, 38, 70, 29, 4, 148, 167, 193, 172, 7, 102, 39, 35, 72, 62, 60, 50, 180, 170, 132, 114, 199, 146, 44, 151, 23, 85, 33, 29, 143, 67, 115, 182, 137, 144, 186, 37, 111, 131, 9, 70, 185, 1, 57, 58, 63, 70, 108, 195, 40, 193, 109, 192, 139,
Sortiertes Array:

, 0, 1, 100, 102**, 104, 105, 106, 108*, 109, 111, 112*, 113, 114*, 115*, 12*, 122, 129, 130****, 131, 132**, 134, 137*, 138*, 139, 14*, 140, 142, 143*, 144*, 145, 146**, 147*, 148, 149, 15, 151, 152**, 153, 154, 155, 157*, 158, 16, 160, 163, 165**, 167, 168, 169, 170, 172, 178**, 18***, 180**, 181, 182*, 183, 184**, 185*, 186*, 189, 192, 193**, 194*, 195, 196, 197, 198, 199*, 23*, 25***, 27, 28*, 29**, 3, 33*, 34, 35, 36*, 37, 38*, 39*, 4*, 40*, 41, 42, 43, 44**, 47, 49, 50*, 54*, 57, 58*, 59, 6, 60, 62***, 63, 65, 66, 67**, 69, 7*, 70**, 71*, 72**, 76*, 78, 79, 8, 80, 81, 82*, 84, 85**, 86, 87, 9***, 90, 95, 96
==2122==
==2122== HEAP SUMMARY:
==2122==     in use at exit: 0 bytes in 0 blocks
==2122==   total heap usage: 9,730 allocs, 9,730 frees, 41,932 bytes allocated
==2122==
==2122== All heap blocks were freed -- no leaks are possible
==2122==
==2122== For lists of detected and suppressed errors, rerun with: -s
==2122== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
tombo@AtomsOberflche:/mnt/c/Users/tombo/HTWG/AIN2/SysProg/sypr-uebungen/aufgabe3$ time ./stringsort 200 > /dev/null

real    0m0.014s
user    0m0.002s
sys     0m0.000s
tombo@AtomsOberflche:/mnt/c/Users/tombo/HTWG/AIN2/SysProg/sypr-uebungen/aufgabe3$ time ./stringsort 20000 > /dev/null

real    0m1.958s
user    0m1.871s
sys     0m0.000s
tombo@AtomsOberflche:/mnt/c/Users/tombo/HTWG/AIN2/SysProg/sypr-uebungen/aufgabe3$ time ./stringsort-optimiert 20000 > /d
ev/null

real    0m3.725s
user    0m3.566s
sys     0m0.000s
tombo@AtomsOberflche:/mnt/c/Users/tombo/HTWG/AIN2/SysProg/sypr-uebungen/aufgabe3$